on:
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Release

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          # body: ${{ steps.gen-relnotes.outputs.release_notes }}
          draft: false
          prerelease: false

  upload-asset:
      name: Upload Release Asset
      needs: [create-release]

      runs-on: ubuntu-latest
      strategy:
        matrix:
          # Specify all desired node versions
          node-version: [10.x]

      steps:
        - uses: actions/checkout@v2
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v1
          with:
            node-version: ${{ matrix.node-version }}
        - run: npm ci

        - name: Build mod package
          id: build-asset
          # Use 'ls' to extract the path and name of output bundle
          run: |
            npm run build
            echo "::set-output name=out_path::$(ls ./dist/*)"
            echo "::set-output name=out_name::$(ls ./dist)"

        - name: Upload Release Asset
          id: upload-release-asset
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ needs.create-release.outputs.upload_url }}
            asset_path: ${{ steps.build-asset.outputs.out_path }}
            asset_name: ${{ steps.build-asset.outputs.out_name }}
            asset_content_type: application/zip
